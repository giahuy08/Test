[{"D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\index.js":"1","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\reportWebVitals.js":"2","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\App.js":"3","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\screens\\FileUploadScreen.js":"4","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\data\\api.js":"5","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Upload_Image\\clientproject\\src\\index.js":"6","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Upload_Image\\clientproject\\src\\reportWebVitals.js":"7","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Upload_Image\\clientproject\\src\\App.js":"8","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Upload_Image\\clientproject\\src\\screens\\FileUploadScreen.js":"9","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Upload_Image\\clientproject\\src\\data\\api.js":"10"},{"size":500,"mtime":1610639324000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610639324000,"results":"13","hashOfConfig":"12"},{"size":2699,"mtime":1610639324000,"results":"14","hashOfConfig":"12"},{"size":5283,"mtime":1610639324000,"results":"15","hashOfConfig":"12"},{"size":842,"mtime":1610639324000,"results":"16","hashOfConfig":"12"},{"size":500,"mtime":1610639324000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1610639324000,"results":"19","hashOfConfig":"18"},{"size":2326,"mtime":1618504308511,"results":"20","hashOfConfig":"18"},{"size":2536,"mtime":1618493101350,"results":"21","hashOfConfig":"18"},{"size":459,"mtime":1618491171291,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"mfmyr8",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ja9rii",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\index.js",[],["46","47"],"D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\reportWebVitals.js",[],"D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\App.js",["48"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport FileUploadScreen from './screens/FileUploadScreen';\nimport {getSingleFiles, getMultipleFiles} from './data/api';\n\nfunction App() {\n  const [singleFiles, setSingleFiles] = useState([]);\n  const [multipleFiles, setMultipleFiles] = useState([]);\n\n  const getSingleFileslist = async () => {\n    try {\n        const fileslist = await getSingleFiles();\n        setSingleFiles(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const getMultipleFilesList = async () => {\n    try {\n        const fileslist = await getMultipleFiles();\n        setMultipleFiles(fileslist);\n        console.log(multipleFiles);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    getSingleFileslist();\n    getMultipleFilesList();\n  }, []);\n  return (\n    <>\n        <div className=\"container\">\n          <h3 className=\"text-danger font-weight-bolder border-bottom text-center\">Single & Multiple File Upload Using MERN Stack </h3>\n          <FileUploadScreen getsingle={() => getSingleFileslist()} getMultiple={() => getMultipleFilesList()}/>\n       </div> \n       <div className=\"container-fluid mt-5\">\n         <div className=\"row\">\n           <div className=\"col-6\">\n             <h4 className=\"text-success font-weight-bold\">Single Files List</h4>\n             <div className=\"row\">\n                {singleFiles.map((file, index) => \n                  <div className=\"col-6\">\n                    <div className=\"card mb-2 border-0 p-0\">\n                      <img src={`http://localhost:8080/${file.filePath}`} height=\"200\" className=\"card-img-top img-responsive\" alt=\"img\"/>\n                      </div>\n                  </div>\n                )}\n             </div>\n           </div>\n           <div className=\"col-6\">\n             <h4 className=\"text-success font-weight-bold\">Multiple Files List</h4>\n             {multipleFiles.map((element, index) =>\n                <div key={element._id}>\n                    <h6 className=\"text-danger font-weight-bold\">{element.title}</h6>\n                    <div className=\"row\">\n                      {element.files.map((file, index) =>\n                        <div className=\"col-6\">\n                            <div className=\"card mb-2 border-0 p-0\">\n                              <img src={`http://localhost:8080/${file.filePath}`} height=\"200\" className=\"card-img-top img-responsive\" alt=\"img\"/>\n                              </div>\n                          </div>\n                       )}\n                      </div>\n                </div>\n              )}\n           </div>\n         </div>\n       </div>\n    </>\n  );\n}\n\nexport default App;\n","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\screens\\FileUploadScreen.js",["49"],"import React, {useState, useEffect} from 'react';\nimport {singleFileUpload, multipleFilesUpload} from '../data/api';\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\n\nconst FileUploadScreen = (props) => {\n    const [singleFile, setSingleFile] = useState('');\n    const [multipleFiles, setMultipleFiles] = useState('');\n    const [title, setTitle] =  useState('');\n    const [singleProgress, setSingleProgress] = useState(0);\n    const [multipleProgress, setMultipleProgress] = useState(0);\n\n    const SingleFileChange = (e) => {\n        setSingleFile(e.target.files[0]);\n        setSingleProgress(0);\n    }\n    const MultipleFileChange = (e) => {\n        setMultipleFiles(e.target.files);\n        setMultipleProgress(0);\n    }\n    const singleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setSingleProgress(percentage);\n        }\n    }\n    const mulitpleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setMultipleProgress(percentage);\n        }\n    }\n    const uploadSingleFile = async () => {\n        const formData = new FormData();\n        formData.append('file', singleFile);\n        await singleFileUpload(formData, singleFileOptions);\n        props.getsingle();\n    }\n    const UploadMultipleFiles = async () => {\n        const formData = new FormData();\n        formData.append('title', title);\n        for (let i = 0; i < multipleFiles.length; i++) {\n            formData.append('files', multipleFiles[i]);                      \n        }\n        await multipleFilesUpload(formData, mulitpleFileOptions);\n        props.getMultiple();\n    }\n    return (\n        <div className=\"row mt-3\">\n            <div className=\"col-6\">\n                <div className=\"form-group\">\n                    <label>Select Single File</label>\n                    <input type=\"file\" className=\"form-control\" onChange={(e) => SingleFileChange(e)} />\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-10\">\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => uploadSingleFile()} >Upload</button>\n                    </div>\n                    <div className=\"col-2\">\n                        <CircularProgressbar\n                            value={singleProgress}\n                            text={`${singleProgress}%`}\n                            styles={buildStyles({\n                                rotation: 0.25,\n                                strokeLinecap: 'butt',\n                                textSize: '16px',\n                                pathTransitionDuration: 0.5,\n                                pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\n                                textColor: '#f88',\n                                trailColor: '#d6d6d6',\n                                backgroundColor: '#3e98c7',\n                            })}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-6\">\n                   <div className=\"row\">\n                       <div className=\"col-6\">\n                            <label >Title</label>\n                            <input type=\"text\" onChange={(e) => setTitle(e.target.value) } placeholder=\"enter title for your gallery\" className=\"form-control\"/>\n                       </div>\n                       <div className=\"col-6\">\n                        <div className=\"form-group\">\n                            <label>Select Multiple Files</label>\n                            <input type=\"file\" onChange={(e) => MultipleFileChange(e)} className=\"form-control\" multiple />\n                        </div>\n                       </div>\n                   </div>                   \n                    <div className=\"row\">\n                        <div className=\"col-10\">\n                            <button type=\"button\" onClick={() => UploadMultipleFiles()}  className=\"btn btn-danger\">Upload</button>\n                        </div>\n                        <div className=\"col-2\">\n                        <CircularProgressbar\n                            value={multipleProgress}\n                            text={`${multipleProgress}%`}\n                            styles={buildStyles({\n                                rotation: 0.25,\n                                strokeLinecap: 'butt',\n                                textSize: '16px',\n                                pathTransitionDuration: 0.5,\n                                pathColor: `rgba(255, 136, 136, ${multipleProgress / 100})`,\n                                textColor: '#f88',\n                                trailColor: '#d6d6d6',\n                                backgroundColor: '#3e98c7',\n                            })}\n                        />\n                    </div>\n                    </div>\n                </div>\n        </div>\n    );\n}\n\nexport default FileUploadScreen;","D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Nodejs_Mongodb_Express_Multer-main\\clientproject\\src\\data\\api.js",[],"D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Upload_Image\\clientproject\\src\\index.js",[],"D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Upload_Image\\clientproject\\src\\reportWebVitals.js",[],"D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Upload_Image\\clientproject\\src\\App.js",["50"],"D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Upload_Image\\clientproject\\src\\screens\\FileUploadScreen.js",["51","52","53","54"],"D:\\Nam_3\\Thuong_mai_dien_tu\\Demo\\Upload_Image\\clientproject\\src\\data\\api.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":30,"column":6,"nodeType":"61","endLine":30,"endColumn":8,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":26,"nodeType":"65","messageId":"66","endLine":1,"endColumn":35},{"ruleId":"63","severity":1,"message":"67","line":4,"column":25,"nodeType":"65","messageId":"66","endLine":4,"endColumn":41},{"ruleId":"63","severity":1,"message":"64","line":1,"column":26,"nodeType":"65","messageId":"66","endLine":1,"endColumn":35},{"ruleId":"63","severity":1,"message":"68","line":2,"column":27,"nodeType":"65","messageId":"66","endLine":2,"endColumn":46},{"ruleId":"63","severity":1,"message":"69","line":9,"column":12,"nodeType":"65","messageId":"66","endLine":9,"endColumn":17},{"ruleId":"63","severity":1,"message":"70","line":9,"column":19,"nodeType":"65","messageId":"66","endLine":9,"endColumn":27},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMultipleFilesList'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getMultipleFiles' is defined but never used.","'multipleFilesUpload' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [getMultipleFilesList]",{"range":"76","text":"77"},[834,836],"[getMultipleFilesList]"]